[{"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\index.js":"1","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\App.js":"2","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\Home\\Home.js":"3","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\Login\\Login.js":"4","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\MainHeader\\MainHeader.js":"5","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\UI\\Button\\Button.js":"7","C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\UI\\Card\\Card.js":"8","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\index.js":"9","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\App.js":"10","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\components\\Navbar.js":"11","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Home.js":"12","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Posts.js":"13","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Users.js":"14","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\EditUser.js":"15","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\UsersFunc.js":"16","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\UsersReducer.js":"17","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\components\\ReduxCounter.js":"18","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\store.js":"19","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\reducers\\index.js":"20","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\reducers\\IncDec.js":"21","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\action\\index.js":"22","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\redux\\store.js":"23","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\redux\\counter.js":"24"},{"size":169,"mtime":1637146743720,"results":"25","hashOfConfig":"26"},{"size":1029,"mtime":1637237804682,"results":"27","hashOfConfig":"26"},{"size":250,"mtime":1637146743997,"results":"28","hashOfConfig":"26"},{"size":2860,"mtime":1637152391894,"results":"29","hashOfConfig":"26"},{"size":368,"mtime":1637146744077,"results":"30","hashOfConfig":"26"},{"size":571,"mtime":1637146744150,"results":"31","hashOfConfig":"26"},{"size":353,"mtime":1637146743954,"results":"32","hashOfConfig":"26"},{"size":218,"mtime":1637146743874,"results":"33","hashOfConfig":"26"},{"size":363,"mtime":1638966453909,"results":"34","hashOfConfig":"35"},{"size":1153,"mtime":1638957123021,"results":"36","hashOfConfig":"35"},{"size":1808,"mtime":1638947468619,"results":"37","hashOfConfig":"35"},{"size":231,"mtime":1637819824679,"results":"38","hashOfConfig":"35"},{"size":4170,"mtime":1638359336746,"results":"39","hashOfConfig":"35"},{"size":16313,"mtime":1638881549977,"results":"40","hashOfConfig":"35"},{"size":1337,"mtime":1638172993933,"results":"41","hashOfConfig":"35"},{"size":13509,"mtime":1638871913335,"results":"42","hashOfConfig":"35"},{"size":12695,"mtime":1638948835655,"results":"43","hashOfConfig":"35"},{"size":1073,"mtime":1638967441527,"results":"44","hashOfConfig":"35"},{"size":135,"mtime":1638966366565,"results":"45","hashOfConfig":"35"},{"size":189,"mtime":1638958108505,"results":"46","hashOfConfig":"35"},{"size":508,"mtime":1638960849371,"results":"47","hashOfConfig":"35"},{"size":275,"mtime":1638960662901,"results":"48","hashOfConfig":"35"},{"size":216,"mtime":1638967291181,"results":"49","hashOfConfig":"35"},{"size":660,"mtime":1638967356324,"results":"50","hashOfConfig":"35"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1nogx13",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o4ucb6",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\index.js",[],["103","104"],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\App.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\Home\\Home.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\Login\\Login.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\Addweb\\fourth-project\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\index.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\App.js",["105","106","107","108"],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\components\\Navbar.js",[],["109","110"],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Home.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Posts.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\Users.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\EditUser.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\UsersFunc.js",["111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport \"antd/dist/antd.css\"\r\nimport { Table, Input } from 'antd';\r\n\r\nfunction UsersFunc() {\r\n    const [users, setUsers] = useState([]);\r\n    const [searchVal, setSearchVal] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [showAddButton, setShowAddButton] = useState(true);\r\n    const [isLoaded, setIsLoaded] = useState(true);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [address, setAddress] = useState({\r\n        street: \"\",\r\n        suite: \"\",\r\n        city: \"\",\r\n        zipcode: \"\",\r\n        geo: {\r\n            lat: \"\",\r\n            long: \"\"\r\n        }\r\n    })\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [website, setWebsite] = useState(\"\");\r\n    const [company, setCompany] = useState({\r\n        companyname: \"\",\r\n        catchPhrase: \"\",\r\n        bs: \"\"\r\n    });\r\n    const [editShow, setEditShow] = useState(false);\r\n    const [updatedList, setUpdatedList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3005/users').then(res => {\r\n            // console.log(res);\r\n            return res.json()\r\n        }).then((result) => {\r\n            // this.setState({ isLoaded: true, users: result })\r\n            setIsLoaded(true);\r\n            setUsers(result)\r\n            // console.log(users);\r\n            // console.log(result);\r\n        }, (error) => {\r\n            setIsLoaded(true);\r\n        })\r\n    }, [])\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            key: 'id',\r\n            dataIndex: 'id'\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            key: 'id',\r\n            dataIndex: 'name',\r\n            sorter: (a,b)=> a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: \"userName\",\r\n            key: 'id',\r\n            dataIndex: 'username',\r\n            sorter: (a,b)=> a.username.length - b.username.length\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            key: 'id',\r\n            dataIndex: 'email',\r\n            sorter: (a,b)=> a.email.length - b.email.length\r\n        },\r\n        {\r\n            title: \"Street\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'street']\r\n        },\r\n        {\r\n            title: \"Suite\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'suite']\r\n        },\r\n        {\r\n            title: \"City\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'city']\r\n        },\r\n        {\r\n            title: \"Zipcode\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'zipcode']\r\n        },\r\n        {\r\n            title: \"Lattitude\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'geo', 'lat']\r\n        },\r\n        {\r\n            title: \"Longitude\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'geo', 'lng']\r\n        },\r\n        {\r\n            title: \"Phone\",\r\n            key: 'id',\r\n            dataIndex: 'phone'\r\n        },\r\n        {\r\n            title: \"Website\",\r\n            key: 'id',\r\n            dataIndex: 'website'\r\n        },\r\n        {\r\n            title: \"Company Name\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'name']\r\n        },\r\n        {\r\n            title: \"Catchphrase\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'catchPhrase']\r\n        },\r\n        {\r\n            title: \"Bs\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'bs']\r\n        },\r\n        {\r\n            title: \"Buttons\",\r\n            key: 'id',\r\n            render: (users) => { return (<button onClick={() => deleteHandler(users)}>Edit</button>) }\r\n        },\r\n        {\r\n            title: \"Buttons\",\r\n            key: 'id',\r\n            render: (users) => { return (<button onClick={() => deleteHandler(users)}>Delete</button>) }\r\n        },\r\n    ]\r\n\r\n    const editHandler = (user) => {\r\n        // console.log(id);\r\n        // localStorage.setItem('id', user.id);\r\n        // localStorage.setItem('name', user.name);\r\n        // localStorage.setItem('email', user.email);\r\n        localStorage.setItem('usersInfo', JSON.stringify(user));\r\n        // console.log(users[0].id)\r\n        setEditShow(true);\r\n        editHandlerMaterial();\r\n\r\n    }\r\n\r\n    const getdata = () => {\r\n        fetch('http://localhost:3005/users').then(res => {\r\n            // console.log(res);\r\n            return res.json()\r\n        }).then((result) => {\r\n            // this.setState({ users: result })\r\n            setUsers(result);\r\n        })\r\n    }\r\n\r\n    const AddDataFunc = (e) => {\r\n        e.preventDefault();\r\n        // this.setState({ show: true, showAddButton: false });\r\n        setShow(true);\r\n        setShowAddButton(false);\r\n        // console.log(address.setState({street: }))\r\n    }\r\n\r\n    const addDataToApi = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Updated!\")\r\n        if (name && email && username && address.street && address.suite && address.city && address.zipcode && address.geo.lat && address.geo.long && company.companyname && company.catchphrase && company.bs && website && phone) {\r\n            axios.post('http://localhost:3005/users', { name: name, email: email, username: username, address: { street: address.street, suite: address.suite, city: address.city, zipcode: address.zipcode, geo: { lat: address.geo.lat, long: address.geo.long } }, phone: phone, website: website, company: { companyname: company.companyname, catchphrase: company.catchphrase, bs: company.bs } }).then(() => {\r\n                getdata();\r\n            });\r\n            // this.setState({ name: \"\", email: \"\", show: false, showAddButton: true })\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setShow(false);\r\n            setShowAddButton(true);\r\n        }\r\n        else {\r\n            alert(\"Galat Bhai\")\r\n        }\r\n    }\r\n\r\n    const deleteHandler = (user) => {\r\n        axios.delete(`http://localhost:3005/users/${user.id}`).then(() => {\r\n            getdata();\r\n        })\r\n    }\r\n\r\n    const editHandlerMaterial = () => {\r\n        // this.setState({ name: localStorage.getItem('name'), email: localStorage.getItem('email'), id: localStorage.getItem('id') });\r\n        var www = JSON.parse(localStorage.getItem('usersInfo'));\r\n        console.log(www.id)\r\n        // this.setState({ updatedList: [www] });\r\n        setUpdatedList([www]);\r\n        // this.setState({id: www[0].id})\r\n    }\r\n    // this.setKardiState();\r\n    const editAgainHandler = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"wow\")\r\n        // console.log(\"Updated!\")\r\n        console.log(updatedList)\r\n        axios.put(`http://localhost:3005/users/${updatedList[0].id}`, { ...updatedList[0] }).then(() => {\r\n            getdata();\r\n        });\r\n        // this.setState({ name: \"\", email: \"\", show: false })\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setShow(false);\r\n        // this.setState({ editShow: false });\r\n        setEditShow(false);\r\n    }\r\n    const searchHandler = (users) => {\r\n        let totalCuratedUsers = users.filter((val) => val.name.toLowerCase().includes(searchVal.trim().toLowerCase()));\r\n        // console.log(\"TCU\", totalCuratedUsers);\r\n        // if (totalCuratedUsers.length !== 0) {\r\n            console.log(users)\r\n            return totalCuratedUsers;\r\n            // return this.setState({users: totalCuratedUsers})\r\n            // return setUsers(totalCuratedUsers)\r\n            // this.setState({dikhau: false});\r\n            // return (<Table columns={this.columns} pagination={{pageSize: '5', showSizeChanger: true}} dataSource={totalCuratedUsers}/>)\r\n        // }\r\n        // else if (users === totalCuratedUsers || totalCuratedUsers.length === 0) {\r\n\r\n        //     console.log(\"Not Found\");\r\n        //     fetch('http://localhost:3005/users').then(res => {\r\n        //         // console.log(res);\r\n        //         return res.json()\r\n        //     }).then((result) => {\r\n        //         // this.setState({ isLoaded: true, users: result })\r\n        //         setIsLoaded(true);\r\n        //         console.log(result)\r\n        //         setUsers(result)\r\n        //         // console.log(users);\r\n        //         // console.log(result);\r\n        //     }, (error) => {\r\n        //         setIsLoaded(true);\r\n        //     })\r\n        // }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {show ? <form>\r\n                Name: <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\r\n\r\n\r\n                Username: <input type=\"text\" onChange={(e) => setUsername(e.target.value)} value={username} /> <br />\r\n\r\n\r\n                Email: <input type=\"text\" onChange={(e) => setEmail(e.target.value)} value={email} />\r\n\r\n\r\n                Address:\r\n\r\n\r\n                Street: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.street = e.target.value;\r\n                    // this.setState({ address })\r\n                    setAddress(address)\r\n                }} value={address.street} /> <br />\r\n\r\n\r\n\r\n                Suite: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.suite = e.target.value;\r\n                    // this.setState({ address })\r\n                    setAddress(address)\r\n                }} value={address.suite} />\r\n\r\n\r\n                City: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.city = e.target.value;\r\n                    // this.setState({ address })\r\n                    setAddress(address)\r\n                }} value={address.city} /> <br />\r\n\r\n\r\n                Zipcode: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.zipcode = e.target.value;\r\n                    setAddress(address)\r\n                    // this.setState({ address })\r\n                }} value={address.zipcode} /> <br />\r\n\r\n                GEO: <br />\r\n\r\n                Lat: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.geo.lat = e.target.value;\r\n                    setAddress(address)\r\n                    // this.setState({ address })\r\n                }} value={address.geo.lat} />\r\n\r\n                Long: <input type=\"text\" onChange={(e) => {\r\n                    var address = { ...address }\r\n                    address.geo.long = e.target.value;\r\n                    setAddress(address)\r\n                    // this.setState({ address })\r\n                }} value={address.geo.long} /> <br />\r\n\r\n                Phone: <input type=\"text\" onChange={(e) => setPhone(e.target.value)} value={phone} />\r\n\r\n                website: <input type=\"text\" onChange={(e) => setWebsite(e.target.value)} value={website} /> <br />\r\n\r\n\r\n                Company: <br />\r\n\r\n\r\n                company-name: <input type=\"text\" onChange={(e) => {\r\n                    var company = { ...company }\r\n                    company.companyname = e.target.value;\r\n                    // this.setState({ company })\r\n                    setCompany(company)\r\n                }} value={company.companyname} />\r\n\r\n\r\n                catch-phrase: <input type=\"text\" onChange={(e) => {\r\n                    var company = { ...company }\r\n                    company.catchphrase = e.target.value;\r\n                    // this.setState({ company })\r\n                    setCompany(company)\r\n                }} value={company.catchphrase} />\r\n\r\n\r\n                bs: <input type=\"text\" onChange={(e) => {\r\n                    var company = { ...company }\r\n                    company.bs = e.target.value;\r\n                    // this.setState({ company })\r\n                    setCompany(company)\r\n                }} value={company.bs} /> <br />\r\n\r\n\r\n                <button type=\"submit\" onClick={addDataToApi}>Add Data</button>\r\n                <button type=\"button\" onClick={(e) => { e.preventDefault(); setShow(false); setShowAddButton(true) }}>Cancel</button>\r\n            </form> : null}\r\n            {showAddButton ? <button type=\"submit\" onClick={AddDataFunc}>Add Data</button> : null}\r\n\r\n            {editShow ?\r\n                <form onSubmit={editAgainHandler}>\r\n\r\n\r\n                    Name: <input type=\"text\" onChange={(e) => {\r\n                        var updatedList = { ...updatedList }\r\n                        updatedList[0].name = e.target.value;\r\n                        this.setState({ updatedList })\r\n                    }} value={updatedList[0].name} />\r\n\r\n\r\n                    Email: <input type=\"text\" onChange={(e) => {\r\n                        var updatedList = { ...updatedList }\r\n                        updatedList[0].email = e.target.value;\r\n                        this.setState({ updatedList })\r\n                    }} value={updatedList[0].email} />\r\n\r\n\r\n\r\n                    <button type=\"submit\">Update Done</button>\r\n                    <button type=\"button\" onClick={() => setEditShow(false)}>Cancel</button>\r\n                </form> : null}\r\n            <Input.Search placeholder=\"Enter What You Want To Search Here\" onChange={(e) => setSearchVal(e.target.value)} enterbutton />\r\n            <Table columns={columns} pagination={{ pageSize: '5' }} dataSource={searchHandler(users)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersFunc\r\n","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\Routes\\UsersReducer.js",["124","125"],"import React, { useState, useEffect, useReducer } from 'react'\r\nimport axios from 'axios';\r\nimport \"antd/dist/antd.css\"\r\nimport { Table, Input } from 'antd';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    show: false,\r\n    showAddButton: true,\r\n    editShow: false,\r\n    searchValue: \"\",\r\n    isLoaded: true,\r\n    company: {\r\n        companyname: \"\",\r\n        catchPhrase: \"\",\r\n        bs: \"\"\r\n    },\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    phone: \"\",\r\n    address: {\r\n        street: \"\",\r\n        suite: \"\",\r\n        city: \"\",\r\n        zipcode: \"\",\r\n        geo:{\r\n            lat: \"\",\r\n            lng: \"\"\r\n        }\r\n    }\r\n};\r\n\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'getAllUsers':\r\n            return {...state, users:action.value}\r\n        case 'show':\r\n            return {...state, show: !state.show}\r\n        case 'editShow':\r\n            return {...state, editShow: !state.editShow}\r\n        case 'showAddButton':\r\n            return {...state, showAddButton: !state.showAddButton}\r\n        case 'searchValue':\r\n            return {...state, searchValue: action.value}\r\n        case 'isLoaded':\r\n            return {...state, isLoaded: !state.isLoaded}\r\n        case 'companyname':\r\n            return {...state, company: {...state.company,companyname: action.value}}\r\n        case 'catchPhrase':\r\n            return {...state, company: {...state.company, catchPhrase: action.value}}\r\n        case 'bs':\r\n            return {...state, company: {...state.company, bs: action.value}}\r\n        case 'phone':\r\n            return {...state, phone: action.value}\r\n        case 'name':\r\n            return {...state, name: action.value}\r\n        case 'username':\r\n            return {...state, username: action.value}\r\n        case 'email':\r\n            return {...state, email: action.value}\r\n        case 'website':\r\n            return {...state, website: action.value}\r\n        case 'street':\r\n            return {...state, address: {...state.address, street: action.value}}\r\n        case 'suite':\r\n            return {...state, address: {...state.address, suite: action.value}}\r\n        case 'city':\r\n            return {...state, address: {...state.address, city: action.value}}\r\n        case 'zipcode':\r\n            return {...state, address: {...state.address, zipcode: action.value}}\r\n        case 'lat':\r\n            return {...state, address: {...state.address, geo:{...state.address.geo,lat: action.value}}}\r\n        case 'lng':\r\n            return {...state, address: {...state.address, geo:{...state.address.geo, lng: action.value}}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction UsersReducer() {\r\n    const [updatedList, setUpdatedList] = useState([]);\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3005/users').then(res => {\r\n            return res.json()\r\n        }).then((result) => {\r\n            dispatch({type: 'isLoaded'})\r\n            dispatch({type:\"getAllUsers\", value: result})\r\n        }, (error) => {\r\n            dispatch({type: 'isLoaded'})\r\n        })\r\n    }, [])\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            key: 'id',\r\n            dataIndex: 'id'\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            key: 'id',\r\n            dataIndex: 'name',\r\n            sorter: (a,b)=> a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: \"userName\",\r\n            key: 'id',\r\n            dataIndex: 'username',\r\n            sorter: (a,b)=> a.username.length - b.username.length\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            key: 'id',\r\n            dataIndex: 'email',\r\n            sorter: (a,b)=> a.email.length - b.email.length\r\n        },\r\n        {\r\n            title: \"Street\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'street']\r\n        },\r\n        {\r\n            title: \"Suite\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'suite']\r\n        },\r\n        {\r\n            title: \"City\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'city']\r\n        },\r\n        {\r\n            title: \"Zipcode\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'zipcode']\r\n        },\r\n        {\r\n            title: \"Lattitude\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'geo', 'lat']\r\n        },\r\n        {\r\n            title: \"Longitude\",\r\n            key: 'id',\r\n            dataIndex: ['address', 'geo', 'lng']\r\n        },\r\n        {\r\n            title: \"Phone\",\r\n            key: 'id',\r\n            dataIndex: 'phone'\r\n        },\r\n        {\r\n            title: \"Website\",\r\n            key: 'id',\r\n            dataIndex: 'website'\r\n        },\r\n        {\r\n            title: \"Company Name\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'name']\r\n        },\r\n        {\r\n            title: \"Catchphrase\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'catchPhrase']\r\n        },\r\n        {\r\n            title: \"Bs\",\r\n            key: 'id',\r\n            dataIndex: ['company', 'bs']\r\n        },\r\n        {\r\n            title: \"Buttons\",\r\n            key: 'id',\r\n            render: (users) => { return (<button onClick={() => {console.log(users);editHandler(users)}}>Edit</button>) }\r\n        },\r\n        {\r\n            title: \"Buttons\",\r\n            key: 'id',\r\n            render: (users) => { return (<button onClick={() => deleteHandler(users)}>Delete</button>) }\r\n        },\r\n    ]\r\n\r\n    const editHandler = (user) => {\r\n        localStorage.setItem('usersInfo', JSON.stringify(user));\r\n        dispatch({type: \"editShow\"})\r\n        console.log(state.editShow)\r\n        editHandlerMaterial();\r\n\r\n    }\r\n\r\n    const getdata = () => {\r\n        fetch('http://localhost:3005/users').then(res => {\r\n            return res.json()\r\n        }).then((result) => {\r\n            dispatch({type: \"getAllUsers\", value: result})\r\n        })\r\n    }\r\n\r\n    const AddDataFunc = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: \"show\"})\r\n        dispatch({type: \"showAddButton\"})\r\n    }\r\n\r\n    const addDataToApi = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Updated!\")\r\n        if (state.name && state.email && state.username && state.address.street && state.address.suite && state.address.city && state.address.zipcode && state.address.geo.lat && state.address.geo.lng && state.company.companyname && state.company.catchPhrase && state.company.bs && state.website && state.phone) {\r\n            axios.post('http://localhost:3005/users', { name: state.name, email: state.email, username: state.username, address: { street: state.address.street, suite: state.address.suite, city: state.address.city, zipcode: state.address.zipcode, geo: { lat: state.address.geo.lat, lng: state.address.geo.lng } }, phone: state.phone, website: state.website, company: { name: state.company.companyname, catchPhrase: state.company.catchPhrase, bs: state.company.bs } }).then(() => {\r\n                getdata();\r\n            });\r\n            dispatch({type: 'name', value: \"\"})\r\n            dispatch({type: 'email', value: \"\"})\r\n            dispatch({type: \"show\"})\r\n            dispatch({type: \"showAddButton\"})\r\n        }\r\n        else {\r\n            alert(\"Galat Bhai\")\r\n        }\r\n    }\r\n\r\n    const deleteHandler = (user) => {\r\n        axios.delete(`http://localhost:3005/users/${user.id}`).then(() => {\r\n            getdata();\r\n        })\r\n    }\r\n\r\n    const editHandlerMaterial = () => {\r\n        var www = JSON.parse(localStorage.getItem('usersInfo'));\r\n        console.log(www)\r\n        setUpdatedList([www]);\r\n    }\r\n    const editAgainHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(updatedList)\r\n        axios.put(`http://localhost:3005/users/${updatedList[0].id}`, { ...updatedList[0] }).then(() => {\r\n            getdata();\r\n        });\r\n        dispatch({type: 'name', value: \"\"})\r\n        dispatch({type: 'email', value: \"\"})\r\n        dispatch({type: \"show\"})\r\n        dispatch({type: \"editShow\"})\r\n    }\r\n    const searchHandler = (users) => {\r\n        let totalCuratedUsers = users.filter((val) => val.name.toLowerCase().includes(state.searchValue.trim().toLowerCase()));\r\n        console.log(users)\r\n        return totalCuratedUsers;\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {state.show ? <form>\r\n                Name: <input type=\"text\" onChange={(e) => dispatch({type: 'name', value: e.target.value})} value={state.name} />\r\n\r\n\r\n                Username: <input type=\"text\" onChange={(e) => dispatch({type: 'username', value: e.target.value})} value={state.username} /> <br />\r\n\r\n\r\n                Email: <input type=\"text\" onChange={(e) =>dispatch({type: 'email', value: e.target.value})} value={state.email} />\r\n\r\n\r\n                Address:\r\n\r\n\r\n                Street: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'street', value:e.target.value})\r\n                }} value={state.address.street} /> <br />\r\n\r\n\r\n\r\n                Suite: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'suite', value:e.target.value})\r\n                }} value={state.address.suite} />\r\n\r\n\r\n                City: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'city', value:e.target.value})\r\n                }} value={state.address.city} /> <br />\r\n\r\n\r\n                Zipcode: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'zipcode', value:e.target.value})\r\n                }} value={state.address.zipcode} /> <br />\r\n\r\n                GEO: <br />\r\n\r\n                Lat: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'lat', value:e.target.value})\r\n                }} value={state.address.geo.lat} />\r\n\r\n                Long: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'lng', value:e.target.value})\r\n                }} value={state.address.geo.lng} /> <br />\r\n\r\n                Phone: <input type=\"text\" onChange={(e) =>dispatch({type: 'phone', value:e.target.value})} value={state.phone} />\r\n\r\n                website: <input type=\"text\" onChange={(e) => dispatch({type: 'website', value:e.target.value})} value={state.website} /> <br />\r\n\r\n\r\n                Company: <br />\r\n\r\n\r\n                company-name: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'companyname', value:e.target.value})\r\n\r\n                }} value={state.company.companyname} />\r\n\r\n\r\n                catch-phrase: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'catchPhrase', value:e.target.value})\r\n                }} value={state.company.catchPhrase} />\r\n\r\n\r\n                bs: <input type=\"text\" onChange={(e) => {\r\n                    dispatch({type: 'bs', value:e.target.value})\r\n                }} value={state.company.bs} /> <br />\r\n\r\n\r\n                <button type=\"submit\" onClick={addDataToApi}>Add Data</button>\r\n                <button type=\"button\" onClick={(e) => { e.preventDefault(); dispatch({type: \"show\"}); dispatch({type: \"showAddButton\"}) }}>Cancel</button>\r\n            </form> : null}\r\n            {state.showAddButton ? <button type=\"submit\" onClick={AddDataFunc}>Add Data</button> : null}\r\n\r\n            {state.editShow ?\r\n                <form onSubmit={editAgainHandler}>\r\n\r\n\r\n                    Name: <input type=\"text\" onChange={(e) => {\r\n                        var updatedList = { ...updatedList }\r\n                        updatedList[0].name = e.target.value;\r\n                        // this.setState({ updatedList })\r\n                        setUpdatedList(updatedList)\r\n                    }} value={updatedList[0].name} />\r\n\r\n\r\n                    Email: <input type=\"text\" onChange={(e) => {\r\n                        var updatedList = { ...updatedList }\r\n                        updatedList[0].email = e.target.value;\r\n                        // this.setState({ updatedList })\r\n                        setUpdatedList(updatedList)\r\n                    }} value={updatedList[0].email} />\r\n\r\n\r\n\r\n                    <button type=\"submit\">Update Done</button>\r\n                    <button type=\"button\" onClick={() => dispatch({type: \"editShow\"})}>Cancel</button>\r\n                </form> : null}\r\n            <Input.Search placeholder=\"Enter What You Want To Search Here\" onChange={(e) => dispatch({type: 'searchValue', value:e.target.value})} enterbutton />\r\n            <Table columns={columns} pagination={{ pageSize: '5' }} dataSource={searchHandler(state.users)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersReducer;\r\n\r\n","C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\components\\ReduxCounter.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\store.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\reducers\\index.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\reducers\\IncDec.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\action\\index.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\redux\\store.js",[],"C:\\Users\\Mayank\\OneDrive\\Desktop\\ReactJsRepo\\user-task\\src\\redux\\counter.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":12,"column":8,"nodeType":"132","messageId":"133","endLine":12,"endColumn":17},{"ruleId":"130","severity":1,"message":"135","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":21},{"ruleId":"130","severity":1,"message":"136","line":16,"column":10,"nodeType":"132","messageId":"133","endLine":16,"endColumn":18},{"ruleId":"126","replacedBy":"137"},{"ruleId":"128","replacedBy":"138"},{"ruleId":"130","severity":1,"message":"139","line":11,"column":12,"nodeType":"132","messageId":"133","endLine":11,"endColumn":20},{"ruleId":"130","severity":1,"message":"140","line":140,"column":11,"nodeType":"132","messageId":"133","endLine":140,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":264,"column":40,"nodeType":"132","messageId":"143","endLine":264,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":273,"column":40,"nodeType":"132","messageId":"143","endLine":273,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":281,"column":40,"nodeType":"132","messageId":"143","endLine":281,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":289,"column":40,"nodeType":"132","messageId":"143","endLine":289,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":298,"column":40,"nodeType":"132","messageId":"143","endLine":298,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":305,"column":40,"nodeType":"132","messageId":"143","endLine":305,"endColumn":47},{"ruleId":"141","severity":1,"message":"144","line":320,"column":40,"nodeType":"132","messageId":"143","endLine":320,"endColumn":47},{"ruleId":"141","severity":1,"message":"144","line":328,"column":40,"nodeType":"132","messageId":"143","endLine":328,"endColumn":47},{"ruleId":"141","severity":1,"message":"144","line":336,"column":40,"nodeType":"132","messageId":"143","endLine":336,"endColumn":47},{"ruleId":"141","severity":1,"message":"145","line":353,"column":48,"nodeType":"132","messageId":"143","endLine":353,"endColumn":59},{"ruleId":"141","severity":1,"message":"145","line":360,"column":48,"nodeType":"132","messageId":"143","endLine":360,"endColumn":59},{"ruleId":"141","severity":1,"message":"145","line":334,"column":48,"nodeType":"132","messageId":"143","endLine":334,"endColumn":59},{"ruleId":"141","severity":1,"message":"145","line":342,"column":48,"nodeType":"132","messageId":"143","endLine":342,"endColumn":59},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","'UsersFunc' is defined but never used.","'createStore' is defined but never used.","'Provider' is defined but never used.",["146"],["147"],"'isLoaded' is assigned a value but never used.","'editHandler' is assigned a value but never used.","no-use-before-define","'address' was used before it was defined.","usedBeforeDefined","'company' was used before it was defined.","'updatedList' was used before it was defined.","no-global-assign","no-unsafe-negation"]